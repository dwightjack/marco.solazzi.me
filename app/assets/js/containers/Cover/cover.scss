@import "globals";
@import "colors";
@import "mixins";
@import "sass-mq/mq";

.root {
    position: relative;
    z-index: z-index(above);
    width: 100vw;
    padding: rem($page-gutter) vw($page-gutter);

    @include mq($until: tablet-landscape) {
        opacity: 1 !important;
        visibility: visible !important;
        transform: none !important;
    }

    @include mq(tablet-landscape) {
        position: absolute;
        top: 0;
        left: 0;
        display: flex;
        overflow: hidden;
        align-items: center;
        flex-wrap: nowrap;
        justify-content: flex-start;
        width: 100vw;
        height: 100vh;
        padding-top: 0;
        padding-bottom: 0;
        border-right: 8px solid $color-link;
    }

    @include mq($media-type: print) {
        position: relative;
        opacity: 1 !important;
        visibility: visible !important;
        overflow-x: hidden;
        overflow-y: visible;
        flex-direction: column;
        height: auto;
        min-height: 100vh;
        border: 0;
        transform: none !important;
        page-break-after: always;

        [style] {
            opacity: 1 !important;
            visibility: visible !important;
            transform: none !important;
        }
    }
}



.pic {
    position: relative;
    z-index: 1;
    //opacity: 0;
    //transform: translateX(15%);
    will-change: opacity, transform;
    //transition: all 0.4s ease-out 0.35s;


    @include mq($until: tablet-landscape) {

        .is-app-loaded > & {
            opacity: 1 !important;
            visibility: visible !important;
        }
    }

    @include mq(tablet-landscape) {
        position: absolute;
        top: 50%;
        left: vw(30px);
        width: 33 - 4.6875#{vw};
        flex: 0 0 auto;
    }

    @include mq(desktop) {
        left: vw(60px);
    }

    @media print {
        position: static;
        width: 100%;
    }

    > .avatar {
        width: 50vw;
        height: 50vw;
        margin: 0 auto;

        @include mq(tablet-landscape) {
            width: vw(270px);
            height: vw(270px);
            margin-top: vw(270px / -2);
        }

        @include mq($media-type: print) {
            width: 40vw;
            height: 40vw;
            margin-top: 10vw;
            transform: none !important;
        }
    }

    // .is-active > & {
    //     opacity: 1;
    //     transform: translateX(0);
    // }

    // .is-leaving & {
    //     transition-delay: 0s;
    // }
}

.body {
    //opacity: 0;
    //transform: translateX(7%);
    //transition: all 0.4s ease-out 0.35s;
    position: relative;
    z-index: 1;

    @include mq(tablet-landscape) {
        margin-left: 33%;
        flex: 1 1 auto;
    }

    @media print {
        margin-left: 0;
    }


    > * {
        margin-bottom: rem(60px);
        will-change: transform, opacity;

        .is-app-loaded & {
            @include mq($until: tablet-landscape) {
                opacity: 1 !important;
                visibility: visible !important;
                transform: none !important;
            }
        }

        &:last-child {
            margin-bottom: 0;
        }
    }

    // .is-active > & {
    //     opacity: 1;
    //     transform: translateX(0);
    // }
}

.headline {
    margin-top: 0.5em;
    font-size: font-size(40px);
    font-weight: 700;
    text-align: center;

    @include mq(tablet-landscape) {
        margin-top: 0;
        font-size: font-size(45px);
        text-align: left;
    }
}

.text {
    position: relative;
    max-width: 82%;
    margin-right: auto;
    margin-bottom: rem(40px);
    margin-left: auto;
    font-size: font-size(20px);

    @include mq(tablet-landscape) {
        max-width: 450px;
        margin-right: 0;
        margin-left: 0;
        font-size: font-size(20px);
    }

    &::before {
        position: absolute;
        top: -0.35em;
        left: -0.55em;
        opacity: 0.5;
        color: $color-link;
        font-family: 'Times New Roman', Times, serif;
        font-size: 2.5em;
        content: "\201c";

        @include mq(tablet-landscape) {
            font-size: 4em;
        }
    }

    > * {
        margin-bottom: 0.8em;
        line-height: 1.4em;
    }
}

.footer {
    @include mq(tablet-landscape) {
        max-width: 450px;
    }


    > .social-list {
        @include mq($until: tablet-landscape) {
            max-width: 82%;
            margin: 0 auto;
        }
    }
}

.scrollhint {
    position: absolute;
    bottom: 6vh;
    left: 50%;
    display: none;
    opacity: 0.8;
    color: $color-text;
    font-size: font-size(12px);
    text-align: center;
    text-decoration: none;
    transform: translate(-50%, 0);
    will-change: transform, opacity;
    //transition: all 0.5s ease-out;

    @include mq(tablet-landscape) {
        display: block;
    }

    @include mq($media-type: print) {
        display: none;
    }

    > * {
        margin-bottom: 1em;
    }

    .scrollhint-ico {
        transition: transform 0.25s ease-out;
    }
}

.intersect {
    position: absolute;
    left: 0;
    z-index: 1;
    display: block;
    width: 100%;
    height: 10px;
    pointer-events: none;
}

.intersect--top {
    composes: intersect;
    top: 30vh;
}

.intersect--bottom {
    composes: intersect;
    bottom: 10vh;
}

:global(.no-touchevents) .scrollhint:hover,
[data-whatinput="keyboard"] .scrollhint:focus {

    .scrollhint-ico {
        transform: translateY(50%);
    }
}

$appear-enter-timing: 3250ms;
$slide-enter-timing: 800ms;
$slide-leave-timing: 700ms;
$slide-leave-delay: 1550ms;


@media not print {

    .root {

        &:global(.appear-enter-active) {

            .pic,
            .body {
                transition: all 400ms ease-out 300ms;
                transition-property: opacity, transform;
                will-change: transform, opacity;
            }

            .scrollhint {
                transition: all 500ms ease-out $appear-enter-timing;
                transition-property: opacity, transform;
                will-change: transform, opacity;
            }
        }

        &:global(.appear-enter) {

            .pic {
                opacity: 0;
                transform: translateX(15%);
            }

            .body {
                opacity: 0;
                transform: translateX(7%);
            }

            .scrollhint {
                opacity: 0;
                transform: translate(-50%, -10%);
            }
        }


        &:global(.slide-enter-active) {
            transition: transform $slide-enter-timing cubic-bezier(0.8, 0.09, 0.29, 0.97);
            will-change: transform;

            .body {
                transition: opacity 150ms ease;
            }
        }

        &:global(.slide-enter) {
            transform: translateY(-120vh);

            .body {
                opacity: 0;
            }
        }

        &:global(.slide-enter-to) {
            opacity: 1;
            transform: translateY(0);
        }

        &:global(.slide-leave-active) {
            $easing: cubic-bezier(0.71, 0.13, 0.37, 0.93);
            transition: transform $slide-leave-timing $easing $slide-leave-delay;
            will-change: transform;

            .pic,
            .scrollhint {
                transition: opacity 300ms $easing;
            }

            .headline,
            .text,
            .footer {
                transition: all 500ms $easing 650ms;
                will-change: transform, opacity;
            }

            .text {
                transition-delay: 850ms;
            }

            .footer {
                transition-delay: 1050ms;
            }
        }

        &:global(.slide-leave-to) {
            transform: translateY(-100%);

            .pic,
            .scrollhint {
                opacity: 0;
            }

            .headline {
                opacity: 0;
                transform: translateY(-100vh);
            }

            .text,
            .footer {
                opacity: 0;
                transform: translateY(-100vh);
            }
        }
    }
}


/* stylelint-disable property-no-unknown */
:export {
    appear-enter-timing: strip-units($appear-enter-timing);
    slide-enter-timing: strip-units($slide-enter-timing);
    slide-leave-timing: strip-units($slide-leave-delay) + strip-units($slide-leave-timing);
}
/* stylelint-enable property-no-unknown */