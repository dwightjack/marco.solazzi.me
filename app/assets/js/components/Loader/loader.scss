@import "globals";
@import "colors";
@import "mixins";
@import "sass-mq/mq";

.root {
    position: absolute;
    top: 0;
    left: 0;
    z-index: z-index(above);
    display: flex;
    overflow: hidden;
    width: 100%;
    height: 100vh;
    align-items: center;
    flex-wrap: nowrap;
    justify-content: center;

    @include mq(tablet-landscape) {
        justify-content: flex-end;
    }

    @include mq($media-type: print) {
        display: none;
    }
}

.body:global(.h1) {
    font-size: font-size(28px);
    font-weight: font-weight(regular);
    flex: 0 0 auto;


    @include mq(tablet-landscape) {
        font-size: font-size(xl);
        flex: 0 0 50%;
    }
}

.line {
    position: relative;
    display: block;
    overflow: hidden;
    white-space: pre;
    transform: translateX(em(-5px, font-size(xl, false)));
    transition: all 0.6s ease-in-out;

    &::before {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: z-index(above);
        display: block;
        background-color: $color-bg;
        content: "";
        transform: translate3d(0, 0, 0);
        transition: all 0.8s ease-in-out;

        .is-entering & {
            transform: translate3d(100%, 0, 0);
        }
    }

    @for $i from 1 through 4 {

        &:nth-child(#{$i}) {
            $before-delay: 0.25s * $i;
            transition-delay: $before-delay - 0.2s;

            &::before {
                transition-delay: $before-delay;
            }
        }
    }

    .is-entering & {
        transform: translateX(0);
    }
}

.line--pre {
    composes: line;
    left: 0.8em;
}

.dots {
    position: relative;
    display: inline-block;
    overflow: hidden;
    vertical-align: bottom;

    /*

    &::after {
        position: relative;
        display: inline-block;
        content: "...";
        transform: translateX(-100%);

        .is-entering & {
            animation-name: intro-dots;
            animation-duration: 2.5s;
            animation-timing-function: steps(4);
            animation-delay: 1.5s;
            animation-iteration-count: 2;
        }
    }
    */
}

/*
@keyframes intro-dots {

    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(33%);
    }
}*/

:global {

    .loader-animation-leave-to {
        opacity: 0;
        transform: translateX(-5%);
    }

    .loader-animation-leave-active {
        transition: all 350ms ease-out;
        transition-property: opacity, transform;
    }
}