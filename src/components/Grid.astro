---
import { computedSpace } from '../shared/utils';
export interface Props {
  columnsMax?: number;
  columnsWidth: number;
  space?: number | [number, number];
}

const { columnsWidth, columnsMax, space } = Astro.props;
---

<div class="c-grid">
  <slot />
</div>
<style
  define:vars={{
    ['size-width-column']: columnsWidth,
    ['columns-max']: columnsMax,
    ...computedSpace(space, { prefix: '' }),
  }}
>
  @layer components {
    .c-grid {
      --grid-space: var(--space, 0);
      --grid-space-c: var(--space-c, var(--grid-space));
      --grid-space-r: var(--space-r, var(--grid-space));

      display: grid;
      grid-template-columns: repeat(
        auto-fill,
        minmax(min(100%, var(--size-width-column) * 1rem), 1fr)
      );
      min-inline-size: 0;
      column-gap: calc(var(--grid-space-c) * var(--space-unit));
      row-gap: calc(var(--grid-space-r) * var(--space-unit));
    }

    .c-grid:where([style*='--columns-max']) {
      max-inline-size: calc(
        (var(--size-width-column) * var(--columns-max) * 1rem) + 1.75rem
      );
    }
  }
</style>
