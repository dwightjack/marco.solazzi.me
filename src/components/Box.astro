---
import type { HTMLTag, Polymorphic } from 'astro/types';
import type { Swatches } from '../shared/types';
import { toStyleVars } from '../shared/utils';

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  indent?: number;
  swatch?: Swatches;
}>;

const {
  indent,
  as: Tag = 'div',
  class: className,
  'class:list': classList,
  swatch,
  ...attrs
} = Astro.props;

const classNames = (['c-box'] as unknown[]).concat(className, classList);
---

<Tag
  class:list={classNames}
  {...attrs}
  data-swatch={swatch}
  style={toStyleVars({ indent })}
>
  <slot />
</Tag>
<style>
  @layer components {
    .c-box {
      --indent: 0;

      margin-block: unset;
      margin-inline: unset;
      padding-block: calc(var(--indent) * var(--space-unit));
      padding-inline: calc(var(--indent) * var(--space-unit));
    }

    .c-box[data-swatch] {
      --indent: var(--space-2);

      background-color: var(--box-color-background);
      color: var(--box-color-foreground);
    }

    .c-box > :global(*) {
      margin-block: 0;
    }

    .c-box:is(ul, ol) {
      padding-inline-start: 0;
      list-style-type: none;
    }
  }
</style>
