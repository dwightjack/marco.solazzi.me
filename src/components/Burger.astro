---
---

<button type="button" class="c-burger" aria-expanded="false">
  <span class="u-visuallyhidden">Toggle Menu</span>
</button>
<style>
  .c-burger {
    --burger-size-bar-height: calc(var(--size-unit) * 0.375);
    --burger-size: calc(var(--size-unit) * 3);
    --burger-height: calc(var(--burger-size-bar-height) * 5);
    --burger-transition-time: 0s;

    @media (prefers-reduced-motion: no-preference) {
      --burger-transition-time: 200ms;
    }

    display: flex;
    position: absolute;
    z-index: var(--layer-f1);
    flex-direction: column;
    justify-content: space-between;
    inline-size: var(--burger-size);
    margin: 0;
    padding-block: calc((var(--burger-size) - var(--burger-height)) / 2);
    padding-inline: 0;
    transition: background-size var(--burger-transition-time) ease-out;
    border: 0;
    outline: 0;
    background: transparent linear-gradient(to left, currentcolor, currentcolor)
      no-repeat right 50% / var(--burger-bar-width, 85%)
      var(--burger-size-bar-height);
    color: var(--interactive-color-background);
    cursor: pointer;
    inset-block-start: 1.75rem;
    inset-inline-end: 1.75rem;
    aspect-ratio: 1;

    &:focus-visible {
      --burger-bar-width: 100%;
    }

    @media (--pointer-mouse) {
      &:hover {
        --burger-bar-width: 100%;
      }
    }
  }

  .c-burger::after,
  .c-burger::before {
    content: '';
    display: block;
    block-size: var(--burger-size-bar-height);
    inline-size: 100%;
    transform-origin: 100% 0;
    transition: transform var(--burger-transition-time) ease-out;
    background-color: currentcolor;
  }

  .c-burger::after {
    transform: scaleX(var(--burger-bar-width, 70%));
    transform-origin: 100% bottom;
  }

  .c-burger[aria-expanded='true'] {
    transition-duration: 0s;
    background-size: 0 var(--burger-size-bar-height);
    color: var(--interactive-color-background-pressed);
  }

  .c-burger[aria-expanded='true']::before {
    transform: translateY(var(--burger-height)) rotate(45deg);
    transition: color var(--burger-transition-time) ease-out,
      transform var(--burger-transition-time) ease-out;
  }

  .c-burger[aria-expanded='true']::after {
    transform: translateY(
        calc(var(--burger-size-bar-height) - var(--burger-height) - 0.2rem)
      )
      rotate(-45deg);
    transition: color var(--burger-transition-time) ease-out,
      transform var(--burger-transition-time) ease-out;
  }
</style>
<script>
  import { menuExpanded } from '../shared/store';

  const burgerList = document.querySelectorAll('.c-burger');

  for (const burger of burgerList) {
    menuExpanded.subscribe((expanded) => {
      burger.setAttribute('aria-expanded', `${expanded}`);
    });
    burger.addEventListener('click', () => {
      menuExpanded.set(!menuExpanded.get());
    });
  }
</script>
