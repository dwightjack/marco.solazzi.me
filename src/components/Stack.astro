---
import type { HTMLTag, Polymorphic } from 'astro/types';
import { toStyleVars } from '../shared/utils';

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  space?: number;
}>;

const {
  space = 0,
  as: Tag = 'div',
  class: className,
  'class:list': classList,
  ...attrs
} = Astro.props;

const classNames = (['c-stack'] as unknown[]).concat(className, classList);
---

<Tag
  class:list={classNames}
  {...attrs}
  style={space !== 0 ? toStyleVars({ space }) : null}
>
  <slot />
</Tag>
<style>
  @layer components {
    .c-stack {
      --stack-space: var(--space, 0);

      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      gap: calc(var(--stack-space) * var(--space-unit));
      margin-block: unset;
      margin-inline: unset;
      padding-block: unset;
      padding-inline: unset;
    }

    .c-stack > :global(*) {
      margin-block: 0;
    }

    .c-stack:is(ul, ol) {
      padding-inline-start: 0;
      list-style-type: none;
    }
  }
</style>
