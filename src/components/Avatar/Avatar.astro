---
export interface Props {
  foreground: string;
}

const { foreground } = Astro.props;
---

<figure class="c-avatar" data-fg={foreground}>
  <svg
    viewBox="0 0 850 860"
    width="850"
    height="860"
    role="img"
    focusable="false"
    class="c-avatar__static"
  >
    <title>A picture of myself in Japan</title>
    <g clip-path="url(#avatar-mask)">
      <image xlink:href={foreground} x="0" y="0" />
    </g>

    <clipPath id="avatar-mask">
      <path
        d="M850 425L725.5 725.5 425 850 124.5 725.5 0 425l124.5-300.5L425 0l300.5 124.5z"
      ></path>
    </clipPath>
  </svg>
  <figcaption class="u-visuallyhidden">
    A picture of me during my first trip to Japan
  </figcaption>
</figure>
<style>
  .c-avatar {
    position: relative;
    margin: 0;
  }

  .c-avatar__static {
    width: 100%;
    height: auto;
  }

  .c-avatar > :global(.c-avatar__canvas) {
    position: absolute;
    inset: 0;
  }

  .c-avatar.is-active .c-avatar__static {
    visibility: hidden;
  }
</style>
<script is:inline>
  const avatar = document.querySelector('.c-avatar');
  avatar.classList.add('is-active');
</script>
<script>
  window.requestIdleCallback(async () => {
    const { mount } = await import('./animation');
    mount(document.querySelector('.c-avatar') as HTMLElement, 600, 400);
  });
</script>
