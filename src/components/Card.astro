---
import DateTime from './DateTime.astro';
import Link from './Link.astro';
export interface Props {
  id: string;
  titleLabel?: string;
  title?: string;
  href?: string;
  timeline?: (Date | undefined)[];
  data: Record<string, unknown>;
  dateFormat?: 'short' | 'long' | Intl.DateTimeFormatOptions;
}

const {
  id,
  titleLabel,
  href,
  title = '',
  dateFormat = 'short',
  timeline: [from, to] = [],
  data = {},
} = Astro.props;
---

<article class="c-card">
  {
    from && (
      <span class="c-card__timeline">
        <DateTime datetime={from} dateFormat={dateFormat} />
      </span>
    )
  }
  {
    to && (
      <span class="c-card__timeline">
        <DateTime datetime={to} dateFormat={dateFormat} />
      </span>
    )
  }
  {
    titleLabel && (
      <h3 class="c-card__title" id={`table-${id}`}>
        .{titleLabel}:
        {typeof href === 'string' ? (
          <Link to={href}> {title}</Link>
        ) : (
          <span>{title}</span>
        )}
      </h3>
    )
  }

  <dl class="c-card__data" aria-labelledby={`table-${id}`}>
    {
      Object.entries(data).map(
        ([heading, value]) =>
          value && (
            <div data-row={heading}>
              <dt>.{heading}:</dt>
              <dd>
                {value instanceof Date ? (
                  <DateTime datetime={value} dateFormat={dateFormat} />
                ) : (
                  <Fragment set:html={value} />
                )}
              </dd>
            </div>
          ),
      )
    }
  </dl>
  <slot name="footer" />
</article>
<style>
  @layer components {
    .c-card {
      position: relative;
      inline-size: 100%;
      padding-block: var(--space-half) var(--space-1);
      padding-inline-start: calc(var(--space-unit) * 2.75);
      border: 8px solid transparent;
      background:
        linear-gradient(90deg, var(--box-color-border) 8px, transparent 0)
          no-repeat,
        linear-gradient(180deg, var(--box-color-border) 8px, transparent 0)
          repeat-y 8px 0 / 8px calc(100% - 8px);
      background-origin: border-box;

      @media (--pointer-mouse) and (prefers-reduced-motion: no-preference) {
        transition: transform 500ms var(--easing-out-fast);
        will-change: transform;

        &:global(> *) {
          transition: inherit;
          will-change: transform;
        }

        &:hover {
          transform: translateX(-0.5rem);

          &:global(> *) {
            transform: translateX(1rem);
          }
        }
      }
    }

    .c-card__timeline {
      position: absolute;
      inset-inline-end: calc(100% + 16px);
      color: var(--color-brand-400);
      font-weight: bold;
    }

    .c-card__timeline:first-child {
      inset-block-start: 100%;
      transform: translateY(calc(-50% + 4px));
    }

    .c-card__timeline:not(:first-child) {
      inset-block-end: 100%;
      transform: translateY(calc(50% - 4px));
    }

    .c-card__title {
      font-size: var(--text-heading-font-size);
      line-height: 1.5;
      text-wrap: balance;

      @media (--viewport-tablet-landscape) {
        font-size: var(--text-heading-font-size-mq);
      }
    }

    .c-card__data {
      margin-block: var(--space-2);

      @media (--viewport-tablet-landscape) {
        font-size: var(--text-body-font-size-x2);
      }
    }

    .c-card__data > * {
      max-inline-size: 60ch;
      margin-inline-start: 0.3em;
    }

    .c-card__data :is(dt, dd) {
      display: inline;
      margin-inline-start: 0;
      line-height: 1.5;
    }

    .c-card__data dt {
      margin-inline-start: -0.3em;
      font-weight: 700;
    }

    .c-card__data [data-row='title'] {
      margin-block-start: 0.5em;
    }
  }
</style>
