---
import { toStyleAttribute, computedSpace } from '../shared/utils';
import type { HTMLTag } from 'astro/types';
export interface Props {
  space?: number | [number, number];
  as?: HTMLTag;
  class?: string;
  [k: string]: unknown;
}

const { as: Tag = 'div', class: className, ...attrs } = Astro.props;

const style = toStyleAttribute(computedSpace(Astro.props.space));
---

<Tag class:list={['c-cluster', className]} {...attrs} style={style}
  ><slot />
</Tag>
<style>
  .c-cluster {
    --space: 0;
    --space-c: var(--space);
    --space-r: var(--space);

    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    margin: unset;
    padding: unset;
    column-gap: calc(var(--space-c) * var(--space-unit));
    row-gap: calc(var(--space-r) * var(--space-unit));
  }

  .c-cluster:is(ul, ol) {
    list-style-type: none;
  }

  .c-cluster > :global(*) {
    margin: 0;
  }
</style>
