---
import type { HTMLTag, Polymorphic } from 'astro/types';
import { toStyleAttribute, computedSpace } from '../shared/utils';

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  space?: number | [number, number];
}>;

const {
  as: Tag = 'div',
  class: className,
  'class:list': classList,
  space,
  ...attrs
} = Astro.props;

const style = toStyleAttribute(computedSpace(space));
const classNames = (['c-cluster'] as unknown[]).concat(className, classList);
---

<Tag class:list={classNames} {...attrs} style={style}><slot /></Tag>
<style>
  @layer components {
    .c-cluster {
      --space: 0;
      --space-c: var(--space);
      --space-r: var(--space);

      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      margin-block: unset;
      margin-inline: unset;
      padding-block: unset;
      padding-inline: unset;
      column-gap: calc(var(--space-c) * var(--space-unit));
      row-gap: calc(var(--space-r) * var(--space-unit));
    }

    .c-cluster:is(ul, ol) {
      list-style-type: none;
    }

    .c-cluster > :global(*) {
      margin-block: 0;
      margin-inline: 0;
    }
  }
</style>
