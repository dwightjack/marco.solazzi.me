---
import type { AstroBuiltinAttributes } from 'astro';
import type { HTMLTag } from 'astro/types';
import { toStyleAttribute, computedSpace } from '../shared/utils';

export interface Props extends AstroBuiltinAttributes {
  space?: number | [number, number];
  as?: HTMLTag;
  class?: string;
  [k: string]: unknown;
}

const {
  as: Tag = 'div',
  class: className,
  'class:list': classList,
  space,
  ...attrs
} = Astro.props;

const style = toStyleAttribute(computedSpace(space));
const classNames = (['c-cluster'] as unknown[]).concat(className, classList);
---

<Tag class:list={classNames} {...attrs} style={style}><slot /></Tag>
<style>
  .c-cluster {
    --space: 0;
    --space-c: var(--space);
    --space-r: var(--space);

    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    margin-block: unset;
    margin-inline: unset;
    padding-block: unset;
    padding-inline: unset;
    column-gap: calc(var(--space-c) * var(--space-unit));
    row-gap: calc(var(--space-r) * var(--space-unit));
  }

  .c-cluster:is(ul, ol) {
    list-style-type: none;
  }

  .c-cluster > :global(*) {
    margin-block: 0;
    margin-inline: 0;
  }
</style>
