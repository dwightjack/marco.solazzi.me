---
import { toIdString } from '../shared/utils';
export interface Props {
  id: string;
  mark?: string;
  indent?: boolean;
}

const { id, mark, indent = true } = Astro.props;
---

<div
  data-path={id}
  id={toIdString(id)}
  tabindex="-1"
  class:list={['c-page', { 'c-page--indent': indent }]}
>
  <div class="p-stack p-stack--away">
    <slot />
    {
      mark && (
        <span class="c-page__mark" aria-hidden="true">
          {mark}
        </span>
      )
    }
  </div>
</div>
<style>
  @layer components {
    @supports (animation-timeline: view()) {
      .c-page {
        --visible: 0;

        animation:
          visible steps(1) both,
          invisible steps(1) both;
        animation-timeline: view();
        animation-range:
          entry 40% entry 40%,
          exit 30% exit 30%;
      }
    }

    .c-page {
      outline: 0;
    }

    .c-page.c-page--indent {
      padding-inline: var(--space-page-gutter-inline);
    }

    .c-page__mark {
      position: fixed;
      z-index: var(--layer-b1);
      transition: all 750ms ease-out;
      transition-property: opacity, translate;
      opacity: calc(0.05 * var(--visible, 0));
      font-size: max(300px, 80vmin);
      font-weight: 400;
      white-space: nowrap;
      will-change: opacity, translate;

      @media not screen and (--viewport-tablet) {
        inset-block-start: -40vb;
        inset-inline-end: -10vi;
        writing-mode: vertical-rl;
      }

      @media (--viewport-tablet) {
        inset-block-end: -20vb;
        inset-inline-start: 20vi;
      }

      @media (prefers-reduced-motion: no-preference) {
        /*
          If animation-timeline is supported --visible is toggled between 0 and 1,
          transitioning the translate between 1vi and 0.
          In all other cases, fallbacks to a static computed value of 1vi
        */
        translate: calc(1vi - var(--visible, 0) * 1vi) 0;
      }
    }

    /* Does not supports CSS scroll animations timeline via the view() function */
    @supports not (animation-timeline: view()) {
      /*
     .is-current is only added by JS
      when animation-timeline: view() is not supported
     */
      .c-page.is-current .c-page__mark {
        translate: 0 0;
        opacity: 0.05;
      }

      /**
        JS is disabled as well: hide the mark altogether
      */
      @media (scripting: none) {
        .c-page__mark {
          display: none;
        }
      }
    }

    @keyframes invisible {
      to {
        --visible: 0;
      }
    }

    @keyframes visible {
      to {
        --visible: 1;
      }
    }
  }
</style>
<script>
  import { currentRoute } from '../shared/store';

  if (CSS.supports('animation-timeline: view()') === false) {
    const pages = document.querySelectorAll<HTMLElement>('.c-page');
    currentRoute.subscribe((route) => {
      for (const page of pages) {
        page.classList.toggle('is-current', page.dataset.path === route);
      }
    });
  }
</script>
