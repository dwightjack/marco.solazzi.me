---
import Stack from './Stack.astro';

export interface Props {
  id: string;
  mark?: string;
  indent?: boolean;
}

const { id, mark, indent = true } = Astro.props;

const classes = ['c-page', indent && ' c-page--indent']
  .filter(Boolean)
  .join(' ');
---

<Stack class={classes} id={id} space={15}>
  <slot />
  {
    mark && (
      <span class="c-page__mark" aria-hidden="true">
        {mark}
      </span>
    )
  }
</Stack>
<style>
  .c-page.c-page--indent {
    padding-inline: var(--space-page-gutter-inline);
  }

  .c-page__mark {
    position: fixed;
    z-index: var(--layer-b1);
    transition: all 750ms ease-out;
    transition-property: opacity, transform;
    opacity: 0;
    font-size: max(300px, 80vmin);
    white-space: nowrap;
    will-change: opacity, transform;

    @media not screen and (--viewport-tablet) {
      inset-block-start: -40vw;
      inset-inline-end: -10vh;
      writing-mode: vertical-rl;
    }

    @media (--viewport-tablet) {
      inset-block-end: -20vh;
      inset-inline-start: 20vw;
    }

    @media (prefers-reduced-motion: no-preference) {
      transform: translate(1vw);
    }
  }

  .c-page:not(.is-dynamic) .c-page__mark {
    display: none;
  }

  .c-page.is-current .c-page__mark {
    transform: translateX(0);
    opacity: 0.05;
  }
</style>
<script>
  import { currentRoute } from '../shared/store';

  const pages = document.querySelectorAll('.c-page');

  currentRoute.subscribe((route) => {
    console.log(route);
    for (const page of pages) {
      page.classList.toggle('is-current', page.id === route);
    }
  });

  for (const page of pages) {
    page.classList.add('is-dynamic');
  }
</script>
