---
import Layout from '../layouts/Layout.astro';
import Cover from '../sections/Cover.astro';
import Education from '../sections/Education.astro';
import Jobs from '../sections/Jobs.astro';
import Skills from '../sections/Skills.astro';
import Portfolio from '../sections/Portfolio.astro';
import Footer from '../sections/Footer.astro';
---

<Layout>
  <Cover slot="cover" />
  <Jobs /><Education /><Skills /><Portfolio /><Footer />
</Layout>
<script>
  const sections = [...document.querySelectorAll('.c-page')];

  const options = {};

  let prevYPosition = 0;
  let direction = 'up';

  const getTargetSection = (entry: IntersectionObserverEntry) => {
    const index = sections.findIndex((section) => section == entry.target);

    if (index >= sections.length - 1) {
      return entry.target;
    } else {
      return sections[index + 1];
    }
  };

  const shouldUpdate = (entry: IntersectionObserverEntry) => {
    if (direction === 'down' && !entry.isIntersecting) {
      return true;
    }

    if (direction === 'up' && entry.isIntersecting) {
      return true;
    }

    return false;
  };

  const onIntersect = (entries: IntersectionObserverEntry[]) => {
    entries.forEach((entry) => {
      if (window.scrollY > prevYPosition) {
        direction = 'down';
      } else {
        direction = 'up';
      }

      prevYPosition = window.scrollY;

      const target =
        direction === 'down' ? getTargetSection(entry) : entry.target;

      if (shouldUpdate(entry)) {
        console.log(target);
      }
    });
  };

  const observer = new IntersectionObserver(onIntersect, options);

  sections.forEach((section) => {
    observer.observe(section);
  });
</script>
